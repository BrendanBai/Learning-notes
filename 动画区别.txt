transform translate transition  分别是什么意思?区别?
页面层级关系( 转换也会改变层级关系 )
@keyframes

transition  过渡( 从一个状态到另一个状态 )任何属性都能产生过渡( 前提:元素需要加上过渡的属性,只要属性状态发生改变就可以产生过渡状态 ) 使用场景:单次动画的使用
transition:需要过渡的属性 all 过渡时间 速度 延时


animation   动画 
1.定义动画序列
1.1 @keyframes 动画序列名称 {  }
1.2 通过定义节点来控制多组动画   百分比控制节点  特殊的:from( 设置动画的起始状态 )  to    from==0%   to==100%   
1.3 动画序列节点 控制的是时间 动画执行时间 
2.调用动画序列 animation:( 参数 )动画序列的名称 动画的时间  动画的速度  动画的延迟时间  播放次数infinite  是否逆播放alter  结束动画的状态 
使用场景:多组动画复杂动画



transform 转换效果
四种特殊形式:
位移  translate( x,y )  translateX translateY  translateZ translate3d( x,y,z )(这个可以代替前面所有)( 优点:gpu加速,在一些拥有加速引擎的设备这样的写法性能更好 )
旋转 rotate(deg(角度)) rotateX rotateY rotateZ 
缩放 scale(x,y); x轴方向的缩放,y轴方向的缩放
倾斜 skew( x,y ); x轴方向的倾斜deg,y轴方向的倾斜deg

基于 matrix  矩阵 matrix( 1,0,0,1,30,30 )

transition animation 速度: linear ease easeIn..
基于 贝塞尔曲线 速度变化曲线 


层级问题:
	z-index 
		有定位,没有z-index   后来居上
		有定位,有z-index    根据z-index的大小决定
		有父容器的时候,父容器的z-index起作用,子元素怎么写都会参考父容器
		如果父容器没有z-index约束,子容器和其他容器就是平级关系,参考自己的z-index;
		
		转换也会提高层级
		
		
		
		

		
旋转过后坐标轴也会跟着旋转 ( 顺序问题 )先位移,在旋转


背景图尺寸(  contain 自适应完全显示在容器内, cover自适应完全铺满整个容器,多余的裁剪

背景图的百分百比是基于(父容器的大小-背景图的大小)*100%
背景图定位原理



























